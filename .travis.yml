sudo: required
dist: trusty

env:
    global:
        # The next declaration is the encrypted COVERITY_SCAN_TOKEN, created
        #   via the "travis encrypt" command using the project repo's public key
        - secure: "RpDP8QA0s4T0U1+XOWUjaQFTfdmhoF/Bj63p/u1P0V29SSz4xMe8aA/nbojT7JiL7VqNudOcVcOqA+3HPoEjMsOF9X641spzv5CCwYwezXIqZsH6M56wN+XJsAPWWfr+USpbHLZqHDZ9STNzceiOdwxbxvRBmnz79qS3gXywnxg="

language: cpp
compiler:
    - g++

install:
    # get c++11 support
    - if [ "$CXX" = "g++" ]; then export CXX="g++-4.9" CC="gcc-4.9"; fi
addons:
    apt:
        sources:
            - ubuntu-toolchain-r-test
            - boost-latest
        packages:
            - gcc-4.9
            - g++-4.9

    coverity_scan:
        project:
          name: "cmu-db/peloton"
          description: "Build submitted via Travis CI"
        notification_email: jarulraj@cs.cmu.edu
        build_command_prepend: "rm -rf build &> /dev/null || true; mkdir build && cd build && cmake .. -DCMAKE_BUILD_TYPE=Debug"
        build_command:   "make -j 4"
        branch_pattern: coverity_scan

before_script:
    # setup environment
    - sudo -H sh ./script/installation/packages.sh
    - wget https://gflags.googlecode.com/files/libgflags0_2.0-1_amd64.deb
    - sudo dpkg -i libgflags0_2.0-1_amd64.deb
    - wget https://gflags.googlecode.com/files/libgflags-dev_2.0-1_amd64.deb
    - sudo dpkg -i libgflags-dev_2.0-1_amd64.deb
    - pip install --user cpp-coveralls

script:
    # first, run validator
    - python ./script/validators/validator.py
      # build
    - mkdir build
    - cd build
    - cmake -DCMAKE_BUILD_TYPE=Coverage ..
    - make
    - make check

after_success:
    #- coveralls --extension .cpp --extension .h --exclude lib --exclude test --exclude src/parser --exclude third_party --exclude CMakeFiles --gcov-options '\-lp' &> coveralls.txt
    - coveralls &> coveralls.txt
    - tail -n 100 coveralls.txt
